{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"G:\\\\TAPERA\\\\nextworkspace\\\\tapera-frontend-package-v2\\\\pages\\\\movie.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Moment from 'moment';\nimport { nowPlayingFetch } from 'redux/actions/MovieActions';\nimport { NOWPLAYINGSUCCESS, NOWPLAYINGFAIL } from 'redux/constants/MovieConstants';\n\nvar Movie = /*#__PURE__*/function (_Component) {\n  _inherits(Movie, _Component);\n\n  var _super = _createSuper(Movie);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      action: _this.props.action,\n      err: _this.props.err,\n      res: _this.props.res,\n      small: false\n    };\n    _this.toggleSmall = _this.toggleSmall.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"toggleSmall\",\n    value: function toggleSmall() {\n      this.setState({\n        small: !this.state.small\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.action !== this.state.action) {\n        if (this.state.action === NOWPLAYINGFAIL) {\n          this.toggleSmall();\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var start = Moment().startOf('month');\n      var end = Moment(start).add(2, 'month');\n      var data = {\n        'primary_release_date.gte': start.format('YYYY-MM-DD'),\n        'primary_release_date.lte': end.format('YYYY-MM-DD')\n      };\n      this.props.onRequest(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          res = _this$state.res,\n          err = _this$state.err;\n      return res.map(function (movie, key) {\n        return __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        }, movie.title);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.action !== prevState.action) {\n        var nextErr = prevState.err;\n        if (nextProps.action === NOWPLAYINGFAIL) nextErr = nextProps.err;\n        var nextRes = prevState.res;\n        if (nextProps.action === NOWPLAYINGSUCCESS) nextRes = nextProps.res;\n        return {\n          action: nextProps.action,\n          err: nextErr,\n          res: nextRes\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    fetch: state.nowPlaying.fetch,\n    res: state.nowPlaying.res,\n    err: state.nowPlaying.err,\n    action: state.nowPlaying.action\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onRequest: function onRequest(value) {\n      return dispatch(nowPlayingFetch(value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);","map":{"version":3,"sources":["G:/TAPERA/nextworkspace/tapera-frontend-package-v2/pages/movie.tsx"],"names":["React","Component","connect","Moment","nowPlayingFetch","NOWPLAYINGSUCCESS","NOWPLAYINGFAIL","Movie","props","state","action","err","res","small","toggleSmall","bind","setState","prevProps","prevState","start","startOf","end","add","data","format","onRequest","map","movie","key","title","nextProps","nextErr","nextRes","mapStateToProps","fetch","nowPlaying","mapDispatchToProps","dispatch","value"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,gCAAlD;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,MAAKF,KAAL,CAAWE,MADR;AAEXC,MAAAA,GAAG,EAAE,MAAKH,KAAL,CAAWG,GAFL;AAGXC,MAAAA,GAAG,EAAE,MAAKJ,KAAL,CAAWI,GAHL;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAOA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AATsB;AAUvB;;;;kCAEa;AACZ,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADP,OAAd;AAGD;;;uCAoBkBI,S,EAAgBC,S,EAAgB;AACjD,UAAIA,SAAS,CAACR,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MAApC,EAA4C;AAC1C,YAAI,KAAKD,KAAL,CAAWC,MAAX,KAAsBJ,cAA1B,EAA0C;AACxC,eAAKQ,WAAL;AACD;AACF;AACF;;;wCAEmB;AAClB,UAAMK,KAAK,GAAGhB,MAAM,GAAGiB,OAAT,CAAiB,OAAjB,CAAd;AACA,UAAMC,GAAG,GAAKlB,MAAM,CAACgB,KAAD,CAAN,CAAcG,GAAd,CAAkB,CAAlB,EAAqB,OAArB,CAAd;AACA,UAAMC,IAAI,GAAG;AACX,oCAA4BJ,KAAK,CAACK,MAAN,CAAa,YAAb,CADjB;AAEX,oCAA4BH,GAAG,CAACG,MAAJ,CAAW,YAAX;AAFjB,OAAb;AAIA,WAAKhB,KAAL,CAAWiB,SAAX,CAAqBF,IAArB;AACD;;;6BAEQ;AAAA;;AAAA,wBACc,KAAKd,KADnB;AAAA,UACCG,GADD,eACCA,GADD;AAAA,UACMD,GADN,eACMA,GADN;AAGP,aACEC,GAAG,CAACc,GAAJ,CAAQ,UAACC,KAAD,EAAaC,GAAb,EAA6B;AACjC,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMD,KAAK,CAACE,KAAZ,CADA;AAGH,OAJD,CADF;AAOD;;;6CA9C+BC,S,EAAgBZ,S,EAAgB;AAC9D,UAAIY,SAAS,CAACpB,MAAV,KAAqBQ,SAAS,CAACR,MAAnC,EAA2C;AACzC,YAAIqB,OAAO,GAAGb,SAAS,CAACP,GAAxB;AACA,YAAImB,SAAS,CAACpB,MAAV,KAAqBJ,cAAzB,EAAyCyB,OAAO,GAAGD,SAAS,CAACnB,GAApB;AAEzC,YAAIqB,OAAO,GAAGd,SAAS,CAACN,GAAxB;AACA,YAAIkB,SAAS,CAACpB,MAAV,KAAqBL,iBAAzB,EAA4C2B,OAAO,GAAGF,SAAS,CAAClB,GAApB;AAE5C,eAAO;AACLF,UAAAA,MAAM,EAAEoB,SAAS,CAACpB,MADb;AAELC,UAAAA,GAAG,EAAEoB,OAFA;AAGLnB,UAAAA,GAAG,EAAEoB;AAHA,SAAP;AAKD;;AAED,aAAO,IAAP;AACD;;;;EAnCe/B,S;;AAoElB,IAAMgC,eAAe,GAAG,SAAlBA,eAAkB,CAACxB,KAAD;AAAA,SAAiB;AACvCyB,IAAAA,KAAK,EAAEzB,KAAK,CAAC0B,UAAN,CAAiBD,KADe;AAEvCtB,IAAAA,GAAG,EAAEH,KAAK,CAAC0B,UAAN,CAAiBvB,GAFiB;AAGvCD,IAAAA,GAAG,EAAEF,KAAK,CAAC0B,UAAN,CAAiBxB,GAHiB;AAIvCD,IAAAA,MAAM,EAAED,KAAK,CAAC0B,UAAN,CAAiBzB;AAJc,GAAjB;AAAA,CAAxB;;AAOA,IAAM0B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAoB;AAC7CZ,IAAAA,SAAS,EAAE,mBAACa,KAAD;AAAA,aAAmBD,QAAQ,CAACjC,eAAe,CAACkC,KAAD,CAAhB,CAA3B;AAAA;AADkC,GAApB;AAAA,CAA3B;;AAIF,eAAepC,OAAO,CAAC+B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C7B,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'moment';\r\nimport { nowPlayingFetch } from 'redux/actions/MovieActions';\r\nimport { NOWPLAYINGSUCCESS, NOWPLAYINGFAIL } from 'redux/constants/MovieConstants';\r\n\r\nclass Movie extends Component<any, any> {\r\n    constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n        action: this.props.action,\r\n        err: this.props.err,\r\n        res: this.props.res,\r\n        small: false,\r\n      };\r\n  \r\n      this.toggleSmall = this.toggleSmall.bind(this);\r\n    }\r\n  \r\n    toggleSmall() {\r\n      this.setState({\r\n        small: !this.state.small,\r\n      });\r\n    }\r\n  \r\n    static getDerivedStateFromProps(nextProps: any, prevState: any) {\r\n      if (nextProps.action !== prevState.action) {\r\n        let nextErr = prevState.err;\r\n        if (nextProps.action === NOWPLAYINGFAIL) nextErr = nextProps.err;\r\n  \r\n        let nextRes = prevState.res;\r\n        if (nextProps.action === NOWPLAYINGSUCCESS) nextRes = nextProps.res;\r\n  \r\n        return {\r\n          action: nextProps.action,\r\n          err: nextErr,\r\n          res: nextRes,\r\n        };\r\n      }\r\n  \r\n      return null;\r\n    }\r\n  \r\n    componentDidUpdate(prevProps: any, prevState: any) {\r\n      if (prevState.action !== this.state.action) {\r\n        if (this.state.action === NOWPLAYINGFAIL) {\r\n          this.toggleSmall();\r\n        }\r\n      }\r\n    }\r\n  \r\n    componentDidMount() {\r\n      const start = Moment().startOf('month');\r\n      const end   = Moment(start).add(2, 'month');\r\n      const data = {\r\n        'primary_release_date.gte': start.format('YYYY-MM-DD'),\r\n        'primary_release_date.lte': end.format('YYYY-MM-DD'),\r\n      };\r\n      this.props.onRequest(data);\r\n    }\r\n  \r\n    render() {\r\n      const { res, err } = this.state;\r\n      \r\n      return (\r\n        res.map((movie: any, key: number) => {\r\n            return (\r\n            <div>{movie.title}</div>\r\n            )\r\n        })\r\n        );\r\n    }\r\n  }\r\n  \r\n  const mapStateToProps = (state: any) => ({\r\n    fetch: state.nowPlaying.fetch,\r\n    res: state.nowPlaying.res,\r\n    err: state.nowPlaying.err,\r\n    action: state.nowPlaying.action,\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch: any) => ({\r\n    onRequest: (value: object) => dispatch(nowPlayingFetch(value)),\r\n  });\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\r\n  "]},"metadata":{},"sourceType":"module"}