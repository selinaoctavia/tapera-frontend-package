{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workerSagaNowPlaying);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { NOWPLAYINGFETCH } from '../constants/MovieConstants';\nimport { nowPlayingSuccess, nowPlayingFail } from '../actions/MovieActions';\nimport axios from 'axios';\n\nfunction workerSagaNowPlaying(params) {\n  var response;\n  return _regeneratorRuntime.wrap(function workerSagaNowPlaying$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(\"call saga\");\n          _context.next = 4;\n          return call(callApi);\n\n        case 4:\n          response = _context.sent;\n\n          if (!(response.status === 200 && response.data.results.length > 0)) {\n            _context.next = 11;\n            break;\n          }\n\n          console.log(response.data.results);\n          _context.next = 9;\n          return put(nowPlayingSuccess(response.data.results));\n\n        case 9:\n          _context.next = 13;\n          break;\n\n        case 11:\n          _context.next = 13;\n          return put(nowPlayingFail(response.data.status_message));\n\n        case 13:\n          _context.next = 19;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 19;\n          return put(nowPlayingFail(_context.t0.message));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 15]]);\n}\n\nfunction callApi() {\n  return axios.get(\"https://api.themoviedb.org/3/discover/movie?api_key=2cd60e70e23d1aac41f24a242c1e08f8&primary_release_date.gte=2020-06-01&primary_release_date.lte=2020-08-30\");\n}\n\nexport var watcherNowPlaying = [takeLatest(NOWPLAYINGFETCH, workerSagaNowPlaying)];","map":{"version":3,"sources":["G:/TAPERA/nextworkspace/tapera-frontend-package-v2/redux/sagas/MovieSagas.ts"],"names":["workerSagaNowPlaying","call","put","takeLatest","NOWPLAYINGFETCH","nowPlayingSuccess","nowPlayingFail","axios","params","console","log","callApi","response","status","data","results","length","status_message","message","get","watcherNowPlaying"],"mappings":";;oDAeUA,oB;;AAfV,SACIC,IADJ,EAEIC,GAFJ,EAGIC,UAHJ,QAIO,oBAJP;AAOA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SACIC,iBADJ,EAEIC,cAFJ,QAGO,yBAHP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAAUP,oBAAV,CAAgCQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAFR;AAGyB,iBAAMT,IAAI,CAACU,OAAD,CAAV;;AAHzB;AAGcC,UAAAA,QAHd;;AAAA,gBAIYA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,MAAtB,GAA+B,CAJtE;AAAA;AAAA;AAAA;;AAKYP,UAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAAT,CAAcC,OAA1B;AALZ;AAMY,iBAAMb,GAAG,CAACG,iBAAiB,CAACO,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAAlB,CAAT;;AANZ;AAAA;AAAA;;AAAA;AAAA;AAQY,iBAAMb,GAAG,CAACI,cAAc,CAACM,QAAQ,CAACE,IAAT,CAAcG,cAAf,CAAf,CAAT;;AARZ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAWQ,iBAAMf,GAAG,CAACI,cAAc,CAAC,YAAMY,OAAP,CAAf,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAASP,OAAT,GAAmB;AACf,SAAQJ,KAAK,CAACY,GAAN,CAAU,8JAAV,CAAR;AAEH;;AAID,OAAO,IAAMC,iBAAiB,GAAG,CAC7BjB,UAAU,CAACC,eAAD,EAAkBJ,oBAAlB,CADmB,CAA1B","sourcesContent":["import {\r\n    call,\r\n    put,\r\n    takeLatest,\r\n} from 'redux-saga/effects';\r\nimport { DefaultAction } from 'configurations/interfaces/redux';\r\nimport { NOWPLAYINGENDPOINT } from 'configurations/MovieConfig';\r\nimport { NOWPLAYINGFETCH } from '../constants/MovieConstants';\r\nimport {\r\n    nowPlayingSuccess,\r\n    nowPlayingFail,\r\n} from '../actions/MovieActions';\r\nimport { get } from 'libraries/api';\r\nimport axios from 'axios';\r\n\r\nfunction* workerSagaNowPlaying (params: DefaultAction) {\r\n    try {\r\n        console.log(\"call saga\");\r\n        const response = yield call(callApi)\r\n        if (response.status === 200 && response.data.results.length > 0) {\r\n            console.log(response.data.results);\r\n            yield put(nowPlayingSuccess(response.data.results));\r\n        } else {\r\n            yield put(nowPlayingFail(response.data.status_message));\r\n        }\r\n    } catch (error) {\r\n        yield put(nowPlayingFail(error.message));\r\n    }\r\n}\r\n\r\nfunction callApi() {\r\n    return  axios.get(\"https://api.themoviedb.org/3/discover/movie?api_key=2cd60e70e23d1aac41f24a242c1e08f8&primary_release_date.gte=2020-06-01&primary_release_date.lte=2020-08-30\");\r\n\r\n}\r\n\r\n\r\n\r\nexport const watcherNowPlaying = [\r\n    takeLatest(NOWPLAYINGFETCH, workerSagaNowPlaying),\r\n];"]},"metadata":{},"sourceType":"module"}