{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(reduxSaga);\n\nimport { all } from 'redux-saga/effects';\nimport LoadSagas from 'redux/sagas';\nexport default function reduxSaga() {\n  return _regeneratorRuntime.wrap(function reduxSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all(LoadSagas);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["D:/Learning/React/tapera-frontend-package/redux/core/saga.ts"],"names":["reduxSaga","all","LoadSagas"],"mappings":";;oDAGyBA,S;;AAHzB,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,SAAUF,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAACC,SAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from 'redux-saga/effects';\r\nimport LoadSagas from 'redux/sagas';\r\n\r\nexport default function* reduxSaga() {\r\n  yield all(LoadSagas);\r\n}"]},"metadata":{},"sourceType":"module"}