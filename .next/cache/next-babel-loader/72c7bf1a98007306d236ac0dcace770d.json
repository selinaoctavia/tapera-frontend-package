{"ast":null,"code":"import { combineReducers } from 'redux';\nimport LoadReducers from 'redux/reducers';\nimport hookReducer from 'redux/core/hook';\nlet reduxReducer = combineReducers(LoadReducers);\n\nif (Object.keys(LoadReducers).length === 0 && LoadReducers.constructor === Object) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const initialReducer = (state = [], action) => state;\n\n  reduxReducer = combineReducers({\n    initialReducer\n  });\n}\n\nconst hooks = (state, action) => {\n  const hook = hookReducer(state, action);\n  return reduxReducer(hook.state, hook.action);\n};\n\nexport default hooks;","map":{"version":3,"sources":["D:/Learning/React/tapera-frontend-package/redux/core/reducer.ts"],"names":["combineReducers","LoadReducers","hookReducer","reduxReducer","Object","keys","length","constructor","initialReducer","state","action","hooks","hook"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,IAAIC,YAAiB,GAAGH,eAAe,CAACC,YAAD,CAAvC;;AAEA,IAAIG,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EAA0BK,MAA1B,KAAqC,CAArC,IAA0CL,YAAY,CAACM,WAAb,KAA6BH,MAA3E,EAAmF;AACjF;AACA,QAAMI,cAAmB,GAAG,CAACC,KAAU,GAAG,EAAd,EAAkBC,MAAlB,KAAkCD,KAA9D;;AACAN,EAAAA,YAAY,GAAGH,eAAe,CAAC;AAAEQ,IAAAA;AAAF,GAAD,CAA9B;AACD;;AAED,MAAMG,KAAU,GAAG,CAACF,KAAD,EAAaC,MAAb,KAA6B;AAC9C,QAAME,IAAI,GAAGV,WAAW,CAACO,KAAD,EAAQC,MAAR,CAAxB;AACA,SAAOP,YAAY,CAACS,IAAI,CAACH,KAAN,EAAaG,IAAI,CAACF,MAAlB,CAAnB;AACD,CAHD;;AAKA,eAAeC,KAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport LoadReducers from 'redux/reducers';\nimport hookReducer from 'redux/core/hook';\n \nlet reduxReducer: any = combineReducers(LoadReducers);\n \nif (Object.keys(LoadReducers).length === 0 && LoadReducers.constructor === Object) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const initialReducer: any = (state: any = [], action: any) => state;\n  reduxReducer = combineReducers({ initialReducer } as any);\n}\n \nconst hooks: any = (state: any, action: any) => {\n  const hook = hookReducer(state, action);\n  return reduxReducer(hook.state, hook.action);\n};\n \nexport default hooks;"]},"metadata":{},"sourceType":"module"}