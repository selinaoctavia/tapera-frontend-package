{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport reducer from 'redux/core/reducer';\nimport persist from 'redux/core/persist'; // import { defaultState } from 'configurations/redux';\n\nconst persistedReducer = persistReducer(persist.storeConfig, reducer);\nexport function initializeStore(initialState) {\n  const store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware()));\n  return store;\n}","map":{"version":3,"sources":["D:/Learning/React/tapera-frontend-package/redux/core/store.ts"],"names":["createStore","applyMiddleware","composeWithDevTools","persistReducer","reducer","persist","persistedReducer","storeConfig","initializeStore","initialState","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAMA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CACA;;AAGA,MAAMC,gBAAgB,GAAGH,cAAc,CAACE,OAAO,CAACE,WAAT,EAAsBH,OAAtB,CAAvC;AAEA,OAAO,SAASI,eAAT,CAAyBC,YAAzB,EAA4C;AACjD,QAAMC,KAAK,GAAGV,WAAW,CACvBM,gBADuB,EAEvBG,YAFuB,EAGvBP,mBAAmB,CAACD,eAAe,EAAhB,CAHI,CAAzB;AAMA,SAAOS,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga'\nimport { createWrapper } from 'next-redux-wrapper'\nimport rootReducer from './reducer'\nimport rootSaga from './saga'\n\nimport reducer from 'redux/core/reducer';\nimport persist from 'redux/core/persist';\n// import { defaultState } from 'configurations/redux';\nimport { DefaultState } from 'configurations/interfaces/redux';\n\nconst persistedReducer = persistReducer(persist.storeConfig, reducer);\n\nexport function initializeStore(initialState: any) {\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware())\n  );\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}