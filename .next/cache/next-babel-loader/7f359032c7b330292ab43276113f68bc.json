{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from 'redux/core/reducer';\nimport persist from 'redux/core/persist';\nimport saga from 'redux/core/saga'; // import { defaultState } from 'configurations/redux';\n\nvar persistedReducer = persistReducer(persist.storeConfig, reducer);\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [sagaMiddleware];\nexport function initializeStore(initialState) {\n  var store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middlewares)));\n  sagaMiddleware.run(saga);\n  return store;\n}","map":{"version":3,"sources":["D:/Learning/React/tapera-frontend-package/redux/core/store.ts"],"names":["createStore","applyMiddleware","composeWithDevTools","persistReducer","createSagaMiddleware","reducer","persist","saga","persistedReducer","storeConfig","sagaMiddleware","middlewares","initializeStore","initialState","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CAEA;;AAGA,IAAMC,gBAAgB,GAAGL,cAAc,CAACG,OAAO,CAACG,WAAT,EAAsBJ,OAAtB,CAAvC;AAEA,IAAMK,cAAc,GAAGN,oBAAoB,EAA3C;AACA,IAAMO,WAAW,GAAG,CAACD,cAAD,CAApB;AAEA,OAAO,SAASE,eAAT,CAAyBC,YAAzB,EAA4C;AACjD,MAAMC,KAAK,GAAGd,WAAW,CACvBQ,gBADuB,EAEvBK,YAFuB,EAGvBX,mBAAmB,CAACD,eAAe,MAAf,SAAmBU,WAAnB,CAAD,CAHI,CAAzB;AAMAD,EAAAA,cAAc,CAACK,GAAf,CAAmBR,IAAnB;AAEA,SAAOO,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from 'redux/core/reducer';\nimport persist from 'redux/core/persist';\nimport saga from 'redux/core/saga';\n\n// import { defaultState } from 'configurations/redux';\nimport { DefaultState } from 'configurations/interfaces/redux';\n\nconst persistedReducer = persistReducer(persist.storeConfig, reducer);\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function initializeStore(initialState: any) {\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middlewares)),\n  );\n\n  sagaMiddleware.run(saga);\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}