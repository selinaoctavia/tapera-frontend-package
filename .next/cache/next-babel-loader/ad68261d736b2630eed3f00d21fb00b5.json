{"ast":null,"code":"import storage from 'redux-persist/lib/storage';\nimport createEncryptor from 'redux-persist-transform-encrypt';\nimport { createBlacklistFilter } from 'redux-persist-transform-filter';\nimport { persistSecretKey, persistBlackList } from 'configurations/redux';\nvar encryptor = createEncryptor({\n  secretKey: persistSecretKey,\n  onError: function onError(error) {\n    console.log('createEncryptor error ', error); // eslint-disable-line\n  }\n});\nvar saveAuthSubsetBlacklistFilter = createBlacklistFilter(persistBlackList);\nvar persistConfig = {\n  active: true,\n  reducerVersion: '1.0',\n  storeConfig: {\n    key: 'root',\n    storage: storage,\n    // whitelist: ['auth', 'notification'],\n    transforms: [saveAuthSubsetBlacklistFilter, encryptor] // transform: [encryptor],\n\n  }\n};\nexport default persistConfig;","map":{"version":3,"sources":["G:/TAPERA/nextworkspace/tapera-frontend-package-v2/redux/core/persist.ts"],"names":["storage","createEncryptor","createBlacklistFilter","persistSecretKey","persistBlackList","encryptor","secretKey","onError","error","console","log","saveAuthSubsetBlacklistFilter","persistConfig","active","reducerVersion","storeConfig","key","transforms"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,sBAAnD;AAEA,IAAMC,SAAS,GAAGJ,eAAe,CAAC;AAChCK,EAAAA,SAAS,EAAEH,gBADqB;AAEhCI,EAAAA,OAFgC,mBAExBC,KAFwB,EAEjB;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC,EADa,CACiC;AAC/C;AAJ+B,CAAD,CAAjC;AAOA,IAAMG,6BAA6B,GAAGT,qBAAqB,CAACE,gBAAD,CAA3D;AAEA,IAAMQ,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,cAAc,EAAE,KAFI;AAGpBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,GAAG,EAAE,MADM;AAEXhB,IAAAA,OAAO,EAAPA,OAFW;AAGX;AACAiB,IAAAA,UAAU,EAAE,CAACN,6BAAD,EAAgCN,SAAhC,CAJD,CAKX;;AALW;AAHO,CAAtB;AAYA,eAAeO,aAAf","sourcesContent":["import storage from 'redux-persist/lib/storage'\nimport createEncryptor from 'redux-persist-transform-encrypt';\nimport { createBlacklistFilter } from 'redux-persist-transform-filter';\nimport { persistSecretKey, persistBlackList } from 'configurations/redux';\n\nconst encryptor = createEncryptor({\n  secretKey: persistSecretKey,\n  onError(error) {\n    console.log('createEncryptor error ', error); // eslint-disable-line\n  },\n});\n \nconst saveAuthSubsetBlacklistFilter = createBlacklistFilter(persistBlackList);\n\nconst persistConfig = {\n  active: true,\n  reducerVersion: '1.0',\n  storeConfig: {\n    key: 'root',\n    storage,\n    // whitelist: ['auth', 'notification'],\n    transforms: [saveAuthSubsetBlacklistFilter, encryptor],\n    // transform: [encryptor],\n  },\n};\n\nexport default persistConfig;"]},"metadata":{},"sourceType":"module"}