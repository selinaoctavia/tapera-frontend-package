{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { NOWPLAYINGENDPOINT } from 'configurations/MovieConfig';\nimport { NOWPLAYINGFETCH } from '../constants/MovieConstants';\nimport { nowPlayingSuccess, nowPlayingFail } from '../actions/MovieActions';\nimport { get } from 'libraries/api';\n\nfunction* workerSagaNowPlaying(params) {\n  try {\n    const response = yield call(get, NOWPLAYINGENDPOINT, params.data);\n    console.log(response);\n\n    if (response.status === 200 && response.data.results.length > 0) {\n      yield put(nowPlayingSuccess(response.data.results));\n    } else {\n      yield put(nowPlayingFail(response.data.status_message));\n    }\n  } catch (error) {\n    yield put(nowPlayingFail(error.message));\n  }\n}\n\nexport const watcherNowPlaying = [takeLatest(NOWPLAYINGFETCH, workerSagaNowPlaying)];","map":{"version":3,"sources":["G:/TAPERA/nextworkspace/tapera-frontend-package-v2/redux/sagas/MovieSagas.ts"],"names":["call","put","takeLatest","NOWPLAYINGENDPOINT","NOWPLAYINGFETCH","nowPlayingSuccess","nowPlayingFail","get","workerSagaNowPlaying","params","response","data","console","log","status","results","length","status_message","error","message","watcherNowPlaying"],"mappings":"AAAA,SACIA,IADJ,EAEIC,GAFJ,EAGIC,UAHJ,QAIO,oBAJP;AAMA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SACIC,iBADJ,EAEIC,cAFJ,QAGO,yBAHP;AAIA,SAASC,GAAT,QAAoB,eAApB;;AAEA,UAAUC,oBAAV,CAA+BC,MAA/B,EAAsD;AAClD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACO,GAAD,EAAMJ,kBAAN,EAA0BM,MAAM,CAACE,IAAjC,CAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAIA,QAAQ,CAACI,MAAT,KAAoB,GAApB,IAA2BJ,QAAQ,CAACC,IAAT,CAAcI,OAAd,CAAsBC,MAAtB,GAA+B,CAA9D,EAAiE;AAC7D,YAAMf,GAAG,CAACI,iBAAiB,CAACK,QAAQ,CAACC,IAAT,CAAcI,OAAf,CAAlB,CAAT;AACH,KAFD,MAEO;AACH,YAAMd,GAAG,CAACK,cAAc,CAACI,QAAQ,CAACC,IAAT,CAAcM,cAAf,CAAf,CAAT;AACH;AACJ,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACK,cAAc,CAACY,KAAK,CAACC,OAAP,CAAf,CAAT;AACH;AACJ;;AAED,OAAO,MAAMC,iBAAiB,GAAG,CAC7BlB,UAAU,CAACE,eAAD,EAAkBI,oBAAlB,CADmB,CAA1B","sourcesContent":["import {\r\n    call,\r\n    put,\r\n    takeLatest,\r\n} from 'redux-saga/effects';\r\nimport { DefaultAction } from 'configurations/interfaces/redux';\r\nimport { NOWPLAYINGENDPOINT } from 'configurations/MovieConfig';\r\nimport { NOWPLAYINGFETCH } from '../constants/MovieConstants';\r\nimport {\r\n    nowPlayingSuccess,\r\n    nowPlayingFail,\r\n} from '../actions/MovieActions';\r\nimport { get } from 'libraries/api';\r\n\r\nfunction* workerSagaNowPlaying(params: DefaultAction) {\r\n    try {\r\n        const response = yield call(get, NOWPLAYINGENDPOINT, params.data);\r\n        console.log(response);\r\n        if (response.status === 200 && response.data.results.length > 0) {\r\n            yield put(nowPlayingSuccess(response.data.results));\r\n        } else {\r\n            yield put(nowPlayingFail(response.data.status_message));\r\n        }\r\n    } catch (error) {\r\n        yield put(nowPlayingFail(error.message));\r\n    }\r\n}\r\n\r\nexport const watcherNowPlaying = [\r\n    takeLatest(NOWPLAYINGFETCH, workerSagaNowPlaying),\r\n];"]},"metadata":{},"sourceType":"module"}