{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"G:\\\\TAPERA\\\\nextworkspace\\\\tapera-frontend-package-v2\\\\pages\\\\movie.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Moment from 'moment';\nimport { nowPlayingFetch } from 'redux/actions/MovieActions';\n\nvar Movie = /*#__PURE__*/function (_Component) {\n  _inherits(Movie, _Component);\n\n  var _super = _createSuper(Movie);\n\n  function Movie(props) {\n    _classCallCheck(this, Movie);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var start = Moment().startOf('month');\n      var end = Moment(start).add(2, 'month');\n      var data = {\n        'primary_release_date.gte': start.format('YYYY-MM-DD'),\n        'primary_release_date.lte': end.format('YYYY-MM-DD')\n      };\n      this.props.onRequest(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          response = _this$props.response,\n          error = _this$props.error;\n      console.log(response);\n      return response.map(function (movie, key) {\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }\n        }, movie.title);\n      });\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    fetch: state.nowPlaying.fetch,\n    response: state.nowPlaying.response,\n    error: state.nowPlaying.error,\n    action: state.nowPlaying.action\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onRequest: function onRequest(value) {\n      return dispatch(nowPlayingFetch(value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);","map":{"version":3,"sources":["G:/TAPERA/nextworkspace/tapera-frontend-package-v2/pages/movie.tsx"],"names":["React","Component","connect","Moment","nowPlayingFetch","Movie","props","start","startOf","end","add","data","format","onRequest","response","error","console","log","map","movie","key","title","mapStateToProps","state","fetch","nowPlaying","action","mapDispatchToProps","dispatch","value"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,4BAAhC;;IAGMC,K;;;;;AACF,iBAAYC,KAAZ,EAAwB;AAAA;;AAAA,6BAChBA,KADgB;AAEvB;;;;wCAEmB;AAClB,UAAMC,KAAK,GAAGJ,MAAM,GAAGK,OAAT,CAAiB,OAAjB,CAAd;AACA,UAAMC,GAAG,GAAKN,MAAM,CAACI,KAAD,CAAN,CAAcG,GAAd,CAAkB,CAAlB,EAAqB,OAArB,CAAd;AACA,UAAMC,IAAI,GAAG;AACX,oCAA4BJ,KAAK,CAACK,MAAN,CAAa,YAAb,CADjB;AAEX,oCAA4BH,GAAG,CAACG,MAAJ,CAAW,YAAX;AAFjB,OAAb;AAIA,WAAKN,KAAL,CAAWO,SAAX,CAAqBF,IAArB;AACD;;;6BAEQ;AAAA;;AAAA,wBACqB,KAAKL,KAD1B;AAAA,UACCQ,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAEPC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,aAEEA,QAAQ,CAACI,GAAT,CAAa,UAACC,KAAD,EAAaC,GAAb,EAA6B;AACtC,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMD,KAAK,CAACE,KAAZ,CADA;AAGH,OAJD,CAFF;AAQD;;;;EA1BepB,S;;AA6BlB,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAiB;AACvCC,IAAAA,KAAK,EAAED,KAAK,CAACE,UAAN,CAAiBD,KADe;AAEvCV,IAAAA,QAAQ,EAAES,KAAK,CAACE,UAAN,CAAiBX,QAFY;AAGvCC,IAAAA,KAAK,EAAEQ,KAAK,CAACE,UAAN,CAAiBV,KAHe;AAIvCW,IAAAA,MAAM,EAAEH,KAAK,CAACE,UAAN,CAAiBC;AAJc,GAAjB;AAAA,CAAxB;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAoB;AAC7Cf,IAAAA,SAAS,EAAE,mBAACgB,KAAD;AAAA,aAAmBD,QAAQ,CAACxB,eAAe,CAACyB,KAAD,CAAhB,CAA3B;AAAA;AADkC,GAApB;AAAA,CAA3B;;AAIF,eAAe3B,OAAO,CAACoB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CtB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'moment';\r\nimport { nowPlayingFetch } from 'redux/actions/MovieActions';\r\nimport { NOWPLAYINGSUCCESS, NOWPLAYINGFAIL } from 'redux/constants/MovieConstants';\r\n\r\nclass Movie extends Component<any, any> {\r\n    constructor(props: any) {\r\n      super(props);\r\n    }\r\n  \r\n    componentDidMount() {\r\n      const start = Moment().startOf('month');\r\n      const end   = Moment(start).add(2, 'month');\r\n      const data = {\r\n        'primary_release_date.gte': start.format('YYYY-MM-DD'),\r\n        'primary_release_date.lte': end.format('YYYY-MM-DD'),\r\n      };\r\n      this.props.onRequest(data);\r\n    }\r\n  \r\n    render() {\r\n      const { response, error } = this.props;\r\n      console.log(response);\r\n      return (\r\n         \r\n        response.map((movie: any, key: number) => {\r\n            return (\r\n            <div>{movie.title}</div>\r\n            )\r\n        })\r\n        );\r\n    }\r\n  }\r\n  \r\n  const mapStateToProps = (state: any) => ({\r\n    fetch: state.nowPlaying.fetch,\r\n    response: state.nowPlaying.response,\r\n    error: state.nowPlaying.error,\r\n    action: state.nowPlaying.action,\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch: any) => ({\r\n    onRequest: (value: object) => dispatch(nowPlayingFetch(value)),\r\n  });\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\r\n  "]},"metadata":{},"sourceType":"module"}