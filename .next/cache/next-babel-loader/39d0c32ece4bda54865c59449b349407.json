{"ast":null,"code":"import storage from 'redux-persist/lib/storage';\nimport createEncryptor from 'redux-persist-transform-encrypt';\nimport { persistSecretKey } from 'configurations/redux';\nconst encryptor = createEncryptor({\n  secretKey: persistSecretKey,\n\n  onError(error) {\n    console.log('createEncryptor error ', error); // eslint-disable-line\n  }\n\n}); // const saveAuthSubsetBlacklistFilter = createBlacklistFilter(persistBlackList);\n\nconst persistConfig = {\n  active: true,\n  reducerVersion: '1.0',\n  storeConfig: {\n    key: 'root',\n    storage,\n    // whitelist: ['auth', 'notification'],\n    // transforms: [saveAuthSubsetBlacklistFilter, encryptor],\n    transform: [encryptor]\n  }\n};\nexport default persistConfig;","map":{"version":3,"sources":["D:/Learning/React/tapera-frontend-package/redux/core/persist.ts"],"names":["storage","createEncryptor","persistSecretKey","encryptor","secretKey","onError","error","console","log","persistConfig","active","reducerVersion","storeConfig","key","transform"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,SAASC,gBAAT,QAAmD,sBAAnD;AAEA,MAAMC,SAAS,GAAGF,eAAe,CAAC;AAChCG,EAAAA,SAAS,EAAEF,gBADqB;;AAEhCG,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC,EADa,CACiC;AAC/C;;AAJ+B,CAAD,CAAjC,C,CAOA;;AAEA,MAAMG,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,cAAc,EAAE,KAFI;AAGpBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,GAAG,EAAE,MADM;AAEXb,IAAAA,OAFW;AAGX;AACA;AACAc,IAAAA,SAAS,EAAE,CAACX,SAAD;AALA;AAHO,CAAtB;AAYA,eAAeM,aAAf","sourcesContent":["import storage from 'redux-persist/lib/storage'\nimport createEncryptor from 'redux-persist-transform-encrypt';\nimport { createBlacklistFilter } from 'redux-persist-transform-filter';\nimport { persistSecretKey, persistBlackList } from 'configurations/redux';\n\nconst encryptor = createEncryptor({\n  secretKey: persistSecretKey,\n  onError(error) {\n    console.log('createEncryptor error ', error); // eslint-disable-line\n  },\n});\n \n// const saveAuthSubsetBlacklistFilter = createBlacklistFilter(persistBlackList);\n\nconst persistConfig = {\n  active: true,\n  reducerVersion: '1.0',\n  storeConfig: {\n    key: 'root',\n    storage,\n    // whitelist: ['auth', 'notification'],\n    // transforms: [saveAuthSubsetBlacklistFilter, encryptor],\n    transform: [encryptor],\n  },\n};\n\nexport default persistConfig;"]},"metadata":{},"sourceType":"module"}