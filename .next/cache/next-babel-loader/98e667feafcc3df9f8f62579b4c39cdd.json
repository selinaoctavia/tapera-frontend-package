{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport reducer from 'redux/core/reducer';\nimport persist from 'redux/core/persist';\nimport saga from 'redux/core/saga'; // import { defaultState } from 'configurations/redux';\n\nconst persistedReducer = persistReducer(persist.storeConfig, reducer);\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nexport function initializeStore(initialState) {\n  const store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\n  sagaMiddleware.run(saga);\n  return store;\n}","map":{"version":3,"sources":["D:/Learning/React/tapera-frontend-package/redux/core/store.ts"],"names":["createStore","applyMiddleware","composeWithDevTools","persistReducer","reducer","persist","saga","persistedReducer","storeConfig","sagaMiddleware","createSagaMiddleware","middlewares","initializeStore","initialState","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CACA;;AAGA,MAAMC,gBAAgB,GAAGJ,cAAc,CAACE,OAAO,CAACG,WAAT,EAAsBJ,OAAtB,CAAvC;AAEA,MAAMK,cAAc,GAAGC,oBAAoB,EAA3C;AACA,MAAMC,WAAW,GAAG,CAACF,cAAD,CAApB;AAGA,OAAO,SAASG,eAAT,CAAyBC,YAAzB,EAA4C;AACjD,QAAMC,KAAK,GAAGd,WAAW,CACvBO,gBADuB,EAEvBM,YAFuB,EAGvBX,mBAAmB,CAACD,eAAe,CAAC,GAAGU,WAAJ,CAAhB,CAHI,CAAzB;AAMAF,EAAAA,cAAc,CAACM,GAAf,CAAmBT,IAAnB;AAEA,SAAOQ,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\n\nimport reducer from 'redux/core/reducer';\nimport persist from 'redux/core/persist';\nimport saga from 'redux/core/saga';\n// import { defaultState } from 'configurations/redux';\nimport { DefaultState } from 'configurations/interfaces/redux';\n\nconst persistedReducer = persistReducer(persist.storeConfig, reducer);\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\n\nexport function initializeStore(initialState: any) {\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middlewares)),\n  );\n\n  sagaMiddleware.run(saga);\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}